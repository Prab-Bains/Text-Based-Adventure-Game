from unittest import TestCase
from unittest.mock import patch
from game import make_board as make_board


class TestMakeBoard(TestCase):
    @patch('random.randint', side_effect=[0, 1, 2, 3, 4])
    def test_make_board_when_board_size_is_equal_to_number_of_descriptions(self, _):
        expected_output = {(0, 0): """
    YOU HAVE ENTERED THE STADIUM PARKING LOT. YOU CAUSED YOUR TEAM TO LOSE THE CHAMPIONSHIPS AND 
    NOW YOUR CITY IS OUTRAGED. YOU HAVE BEEN RECEIVING THREATS NON-STOP AFTER THE GAME. STAY ON 
    YOUR TOES BECAUSE YOU NEVER KNOW WHAT COULD BE HIDING AROUND THE CORNER!""",
                           (0, 1): """
    YOU HAVE ENTERED THE TEAM WEIGHT ROOM, BUT THINGS DON'T FEEL RIGHT. NOBODY ELSE IS THERE AND 
    EVERYTHING IS NOT WHERE ITS SUPPOSED TO BE. THE POWER GOES OUT. A LOUD THUD ECHOES FROM 
    OUTSIDE. THERE'S A KNOCK AT THE DOOR. WHO COULD IT BE?""",
                           (0, 2): """
    YOU HAVE ENTERED THE LOCKER ROOM. YOUR TEAM HAS NOT FORGIVEN YOU FOR YOUR MISTAKES IN THE
    CHAMPIONSHIPS. YOU LOOK AT YOUR LOCKER AND SEE A NOTE. THE NOTE READS, 'WATCH YOUR BACK...'""",
                           (0, 3): """
    YOU HAVE ENTERED THE MANAGER'S OFFICE. WHEN YOU OPEN THE DOOR, THE CHAIR IS FACING THE OTHER 
    WAY. THE DOOR SLAMS BEHIND BEHIND YOU. THE FILM OF THE CHAMPIONSHIP GAME STARTS PLAYING.
    WHO COULD POSSIBLY BEHIND ALL OF THIS?""",
                           (0, 4): """
    YOU HAVE ENTERED YOUR OWN HOUSE. YOU REALIZE YOUR FAMILY ISN'T HOME. YOU RECEIVE A TEXT THAT
    SAYS, 'I HOPE TO SEE YOU SOON, BUT IT IS NOT SAFE FOR US IN THAT CITY.' A ROCK COMES FLYING
    THROUGH THE WINDOW. THE SOUNDS OF GLASS SHATTERING FILLS THE AIR. WHEN YOU LOOK OUTSIDE, YOU
    SEE NOTHING BUT DARKNESS. SUDDENLY, A SHADOW CATCHES YOUR ATTENTION. IT'S COMING CLOSER!"""}

        actual_output = make_board(1, 5)
        self.assertEqual(expected_output, actual_output)

    @patch('random.randint', side_effect=[0, 1, 2, 3])
    def test_make_board_when_board_size_is_less_than_number_of_descriptions(self, _):
        expected_output = {(0, 0): """
    YOU HAVE ENTERED THE STADIUM PARKING LOT. YOU CAUSED YOUR TEAM TO LOSE THE CHAMPIONSHIPS AND 
    NOW YOUR CITY IS OUTRAGED. YOU HAVE BEEN RECEIVING THREATS NON-STOP AFTER THE GAME. STAY ON 
    YOUR TOES BECAUSE YOU NEVER KNOW WHAT COULD BE HIDING AROUND THE CORNER!""",
                           (0, 1): """
    YOU HAVE ENTERED THE TEAM WEIGHT ROOM, BUT THINGS DON'T FEEL RIGHT. NOBODY ELSE IS THERE AND 
    EVERYTHING IS NOT WHERE ITS SUPPOSED TO BE. THE POWER GOES OUT. A LOUD THUD ECHOES FROM 
    OUTSIDE. THERE'S A KNOCK AT THE DOOR. WHO COULD IT BE?""",
                           (1, 0): """
    YOU HAVE ENTERED THE LOCKER ROOM. YOUR TEAM HAS NOT FORGIVEN YOU FOR YOUR MISTAKES IN THE
    CHAMPIONSHIPS. YOU LOOK AT YOUR LOCKER AND SEE A NOTE. THE NOTE READS, 'WATCH YOUR BACK...'""",
                           (1, 1): """
    YOU HAVE ENTERED THE MANAGER'S OFFICE. WHEN YOU OPEN THE DOOR, THE CHAIR IS FACING THE OTHER 
    WAY. THE DOOR SLAMS BEHIND BEHIND YOU. THE FILM OF THE CHAMPIONSHIP GAME STARTS PLAYING.
    WHO COULD POSSIBLY BEHIND ALL OF THIS?"""}

        actual_output = make_board(2, 2)
        self.assertEqual(expected_output, actual_output)

    @patch('random.randint', side_effect=[0, 1, 2, 3, 4, 0, 1, 2, 3])
    def test_make_board_when_board_size_is_greater_than_number_of_descriptions(self, _):
        expected_output = {(0, 0): """
    YOU HAVE ENTERED THE STADIUM PARKING LOT. YOU CAUSED YOUR TEAM TO LOSE THE CHAMPIONSHIPS AND 
    NOW YOUR CITY IS OUTRAGED. YOU HAVE BEEN RECEIVING THREATS NON-STOP AFTER THE GAME. STAY ON 
    YOUR TOES BECAUSE YOU NEVER KNOW WHAT COULD BE HIDING AROUND THE CORNER!""",
                           (0, 1): """
    YOU HAVE ENTERED THE TEAM WEIGHT ROOM, BUT THINGS DON'T FEEL RIGHT. NOBODY ELSE IS THERE AND 
    EVERYTHING IS NOT WHERE ITS SUPPOSED TO BE. THE POWER GOES OUT. A LOUD THUD ECHOES FROM 
    OUTSIDE. THERE'S A KNOCK AT THE DOOR. WHO COULD IT BE?""",
                           (0, 2): """
    YOU HAVE ENTERED THE LOCKER ROOM. YOUR TEAM HAS NOT FORGIVEN YOU FOR YOUR MISTAKES IN THE
    CHAMPIONSHIPS. YOU LOOK AT YOUR LOCKER AND SEE A NOTE. THE NOTE READS, 'WATCH YOUR BACK...'""",
                           (1, 0): """
    YOU HAVE ENTERED THE MANAGER'S OFFICE. WHEN YOU OPEN THE DOOR, THE CHAIR IS FACING THE OTHER 
    WAY. THE DOOR SLAMS BEHIND BEHIND YOU. THE FILM OF THE CHAMPIONSHIP GAME STARTS PLAYING.
    WHO COULD POSSIBLY BEHIND ALL OF THIS?""",
                           (1, 1): """
    YOU HAVE ENTERED YOUR OWN HOUSE. YOU REALIZE YOUR FAMILY ISN'T HOME. YOU RECEIVE A TEXT THAT
    SAYS, 'I HOPE TO SEE YOU SOON, BUT IT IS NOT SAFE FOR US IN THAT CITY.' A ROCK COMES FLYING
    THROUGH THE WINDOW. THE SOUNDS OF GLASS SHATTERING FILLS THE AIR. WHEN YOU LOOK OUTSIDE, YOU
    SEE NOTHING BUT DARKNESS. SUDDENLY, A SHADOW CATCHES YOUR ATTENTION. IT'S COMING CLOSER!""",
                           (1, 2): """
    YOU HAVE ENTERED THE STADIUM PARKING LOT. YOU CAUSED YOUR TEAM TO LOSE THE CHAMPIONSHIPS AND 
    NOW YOUR CITY IS OUTRAGED. YOU HAVE BEEN RECEIVING THREATS NON-STOP AFTER THE GAME. STAY ON 
    YOUR TOES BECAUSE YOU NEVER KNOW WHAT COULD BE HIDING AROUND THE CORNER!""",
                           (2, 0): """
    YOU HAVE ENTERED THE TEAM WEIGHT ROOM, BUT THINGS DON'T FEEL RIGHT. NOBODY ELSE IS THERE AND 
    EVERYTHING IS NOT WHERE ITS SUPPOSED TO BE. THE POWER GOES OUT. A LOUD THUD ECHOES FROM 
    OUTSIDE. THERE'S A KNOCK AT THE DOOR. WHO COULD IT BE?""",
                           (2, 1): """
    YOU HAVE ENTERED THE LOCKER ROOM. YOUR TEAM HAS NOT FORGIVEN YOU FOR YOUR MISTAKES IN THE
    CHAMPIONSHIPS. YOU LOOK AT YOUR LOCKER AND SEE A NOTE. THE NOTE READS, 'WATCH YOUR BACK...'""",
                           (2, 2): """
    YOU HAVE ENTERED THE MANAGER'S OFFICE. WHEN YOU OPEN THE DOOR, THE CHAIR IS FACING THE OTHER 
    WAY. THE DOOR SLAMS BEHIND BEHIND YOU. THE FILM OF THE CHAMPIONSHIP GAME STARTS PLAYING.
    WHO COULD POSSIBLY BEHIND ALL OF THIS?"""}

        actual_output = make_board(3, 3)
        self.assertEqual(expected_output, actual_output)
